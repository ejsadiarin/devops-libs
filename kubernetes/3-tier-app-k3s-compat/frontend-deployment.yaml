---
# Define 'Service' to expose FrontEnd Application
apiVersion: v1
kind: Service
metadata:
  name: to-do-app-frontend
spec:
  selector: # pod labels should match these
    app: to-do-app-frontend
    tier: frontend
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
  type: ClusterIP
---
# 'Deployment' to manage of configuration of frontEnd Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: to-do-app-frontend
  labels: # pod labels should match these
    app: to-do-app-frontend
    tier: frontend
spec:
  replicas: 2 # number of replicas of frontEnd application
  selector:
    matchLabels:
      app: to-do-app-frontend
      tier: frontend
  template:
    metadata:
      labels: # Must match 'Service' and 'Deployment' labels
        app: to-do-app-frontend
        tier: frontend
    spec:
      containers:
        - name: to-do-app-frontend
          image: kubernautslabs/to-do-app-frontend # docker image of frontend application
          env: # Setting Environmental Variables
            - name: SERVER_URI # Setting Backend URI from configMap
              valueFrom:
                configMapKeyRef:
                  name: backend-conf # Name of configMap
                  key: server-uri
          ports:
            - containerPort: 8080
          readinessProbe:
            httpGet:
              path: /
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 5
---
# https://kubernetes.io/docs/concepts/services-networking/ingress/
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: to-do-app-frontend-ingress
  annotations:
    traefik.ingress.kubernetes.io/router.entrypoints: web
spec:
  ingressClassName: traefik
  rules:
    - host: todo.ejsadiarin.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: to-do-app-frontend
                port:
                  number: 80
---
