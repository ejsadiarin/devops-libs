---

# Define a 'Service' To Expose mysql to Other Services
apiVersion: v1
kind: Service
metadata:
  name: mysql # DNS name 
  labels:
    app: mysql
    tier: database
spec:
  ports:
    - port: 3306
      targetPort: 3306
  selector: # mysql Pod Should contain same labels
    app: mysql
    tier: database
  clusterIP: None
---
# Define a 'Persistent Voulume Claim'(PVC) for Mysql Storage, dynamically provisioned by cluster
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pv-claim # name of PVC essential for identifying the storage data 
  labels:
    app: mysql
    tier: database
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: local-path
  resources:
    requests:
      storage: 1Gi
---
# Configure 'Deployment' of mysql server
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mysql
  labels:
    app: mysql
    tier: database
spec:
  selector: # mysql Pod Should contain same labels 
    matchLabels:
      app: mysql
      tier: database
  serviceName: mysql
  replicas: 1
  template:
    metadata:
      labels: # Must match 'Service' and 'Deployment' selectors
        app: mysql
        tier: database
    spec:
      securityContext:
        fsGroup: 999 # mysql group
      containers:
        - image: mysql:5.7 # image from docker-hub
          name: mysql
          args:
            - "--ignore-db-dir=lost+found" # Workaround for https://github.com/docker-library/mysql/issues/186
            - "--default-authentication-plugin=mysql_native_password"
          env:
            - name: MYSQL_ROOT_PASSWORD # Setting Root Password of mysql From a 'Secret'
              valueFrom:
                secretKeyRef:
                  name: db-root-credentials # Name of the 'Secret'
                  key: password # 'key' inside the Secret which contains required 'value'
            - name: MYSQL_USER # Setting USER username on mysql From a 'Secret'
              valueFrom:
                secretKeyRef:
                  name: db-credentials
                  key: username
            - name: MYSQL_PASSWORD # Setting USER Password on mysql From a 'Secret'
              valueFrom:
                secretKeyRef:
                  name: db-credentials
                  key: password
            - name: MYSQL_DATABASE # Setting Database Name from a 'ConfigMap'
              valueFrom:
                configMapKeyRef:
                  name: db-conf
                  key: name
          ports:
            - containerPort: 3306
              name: mysql
          volumeMounts: # Mounting voulume obtained from Persistent Volume Claim
            - name: mysql-persistent-storage
              mountPath: /var/lib/mysql
          livenessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - "mysqladmin ping -uroot -p\"${MYSQL_ROOT_PASSWORD}\""
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
          readinessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - "mysql -uroot -p\"${MYSQL_ROOT_PASSWORD}\" -e 'SELECT 1'"
            initialDelaySeconds: 5
            periodSeconds: 2
            timeoutSeconds: 1
            # volumes:
            #   - name: mysql-persistent-storage # Obtaining 'volume' from PVC
            #     persistentVolumeClaim:
            #       claimName: mysql-pv-claim

  volumeClaimTemplates:
    - metadata:
        name: mysql-persistent-storage
      spec:
        accessModes: ["ReadWriteOnce"]
        storageClassName: local-path
        resources:
          requests:
            storage: 1Gi
